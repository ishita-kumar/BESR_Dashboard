{"ast":null,"code":"var _jsxFileName = \"/home/ishita/Desktop/part-time/BESR_DASHBOARD/Dashboard_CTIL/tester/src/Components/CensusTracts/Education.js\";\nimport React, { PureComponent } from 'react';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport educationData from '../../assets/censustract_education';\nconst data = [{\n  name: 'Less than high school graduate',\n  Tract: educationData.output[0].less_high_school\n}, {\n  name: 'High school graduate',\n  Tract: educationData.output[0].high_school\n}, {\n  name: 'Associates degree',\n  Tract: educationData.output[0].associate_degree\n}, {\n  name: 'Bachelors degree or higher',\n  Tract: educationData.output[0].bachelor\n}];\n\nconst getIntroOfPage = label => {\n  if (label === 'Less than high school graduate') {\n    return \"Indiana State: 112,591,Monroe County: 953\";\n  }\n\n  if (label === 'High school graduate') {\n    return \"Indiana State: 167,276, Monroe County: 1,923\";\n  }\n\n  if (label === 'Associates degree') {\n    return \"Indiana State: 116,983, Monroe County: 2,535\";\n  }\n\n  if (label === 'Bachelors degree or higher') {\n    return \"Indiana State: 48,819, Monroe County: 3,347\";\n  }\n};\n\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (active) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-tooltip\",\n      style: {\n        borderRadius: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Education Group: \", label), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \" Monroe County: \", payload[0].value, \" %\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"intro\",\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, getIntroOfPage(label)));\n  }\n\n  return null;\n};\n\nexport default class Example extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chartData: data\n    };\n  }\n\n  componentDidUpdate(nextProps) {\n    // educationData\n    var newData = [];\n    educationData.output.forEach(item => {\n      if (item.census == nextProps.selectedCensus) {\n        var less_high_school = {\n          name: 'Less than high school graduate',\n          Tract: item.less_high_school\n        };\n        var high_school = {\n          name: 'High school graduate',\n          Tract: item.high_school\n        };\n        var associate_degree = {\n          name: 'Associates degree',\n          Tract: item.associate_degree\n        };\n        var bachelor = {\n          name: 'Bachelors degree or higher',\n          Tract: item.bachelor\n        };\n        newData.push(less_high_school);\n        newData.push(high_school);\n        newData.push(associate_degree);\n        newData.push(bachelor);\n      }\n    });\n    this.state = newData;\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, JSON.stringify(this.state), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        height: 400\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BarChart, {\n      width: 500,\n      height: 300,\n      data: chartData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      wrapperStyle: {\n        backgroundColor: \"#21262F\",\n        borderRadius: \"10px\"\n      },\n      content: /*#__PURE__*/React.createElement(CustomTooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 26\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"Tract\",\n      fill: \"#8884d8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\nExample.jsfiddleUrl = 'https://jsfiddle.net/alidingling/30763kr7/';\nExample.defaultProps = {\n  chartData: []\n};","map":{"version":3,"sources":["/home/ishita/Desktop/part-time/BESR_DASHBOARD/Dashboard_CTIL/tester/src/Components/CensusTracts/Education.js"],"names":["React","PureComponent","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","educationData","data","name","Tract","output","less_high_school","high_school","associate_degree","bachelor","getIntroOfPage","label","CustomTooltip","active","payload","borderRadius","color","value","Example","state","chartData","componentDidUpdate","nextProps","newData","forEach","item","census","selectedCensus","push","console","log","render","JSON","stringify","width","height","top","right","left","bottom","backgroundColor","jsfiddleUrl","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\n\nimport educationData from '../../assets/censustract_education'\n\nconst data = [\n  {\n    name: 'Less than high school graduate', Tract: educationData.output[0].less_high_school,\n  },\n  {\n    name: 'High school graduate', Tract: educationData.output[0].high_school,\n  },\n  {\n    name: 'Associates degree', Tract: educationData.output[0].associate_degree,\n  },\n  {\n    name: 'Bachelors degree or higher', Tract: educationData.output[0].bachelor,\n  }\n];\n\nconst getIntroOfPage = (label) => {\n  if (label === 'Less than high school graduate') {\n    return \"Indiana State: 112,591,Monroe County: 953\"\n\n      ;\n  } if (label === 'High school graduate') {\n    return \"Indiana State: 167,276, Monroe County: 1,923\";\n  } if (label === 'Associates degree') {\n    return \"Indiana State: 116,983, Monroe County: 2,535\";\n  }\n  if (label === 'Bachelors degree or higher') {\n    return \"Indiana State: 48,819, Monroe County: 3,347\";\n  }\n};\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active) {\n    return (\n      <div className=\"custom-tooltip\" style={{ borderRadius: \"10px\" }}>\n        <p className=\"label\" style={{ color: \"white\" }}>Education Group: {label}</p>\n        <p className=\"label\" style={{ color: \"white\" }}> Monroe County: {payload[0].value} %</p>\n        <p className=\"intro\" style={{ color: \"white\" }}>{getIntroOfPage(label)}</p>\n\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default class Example extends PureComponent {\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/30763kr7/';\n\n  static defaultProps = {\n    chartData: [],\n  };\n\n  state = {\n    chartData: data\n  }\n\n  componentDidUpdate(nextProps) {\n    // educationData\n\n    var newData = []\n    educationData.output.forEach(item => {\n      if(item.census == nextProps.selectedCensus) {\n        var less_high_school = {\n          name: 'Less than high school graduate',\n          Tract: item.less_high_school\n        }\n\n        var high_school = {\n          name: 'High school graduate',\n          Tract: item.high_school\n        }\n\n        var associate_degree = {\n          name: 'Associates degree',\n          Tract: item.associate_degree\n        }\n\n        var bachelor = {\n          name: 'Bachelors degree or higher',\n          Tract: item.bachelor\n        }\n\n        newData.push(less_high_school)\n        newData.push(high_school)\n        newData.push(associate_degree)\n        newData.push(bachelor)\n      }\n    })\n\n    this.state = newData;\n    console.log(this.state)\n  }\n\n  render() {\n    return (\n      <div>\n        {JSON.stringify(this.state)}\n        <div style={{ width: '100%', height: 400 }}>\n          <ResponsiveContainer>\n            <BarChart\n              width={500}\n              height={300}\n              data={chartData}\n              margin={{\n                top: 5, right: 30, left: 20, bottom: 5,\n              }}\n            >\n\n              <CartesianGrid strokeDasharray=\"3 3\" />\n\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip wrapperStyle={{ backgroundColor: \"#21262F\", borderRadius: \"10px\" }}\n\n                content={<CustomTooltip />} />\n              <Legend />\n              <Bar dataKey=\"Tract\" fill=\"#8884d8\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n\n\n\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}